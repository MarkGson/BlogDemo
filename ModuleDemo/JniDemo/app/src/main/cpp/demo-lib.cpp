
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <cstring>
#include <malloc.h>
#include "demo.cpp"
/* Header for class mhwang_com_jni_Demo */

#ifndef _Included_mhwang_com_jni_Demo
#define _Included_mhwang_com_jni_Demo
#ifdef __cplusplus
extern "C" {
#endif

/***
 * 将java的数组转成c++指针数组
 * ***/
jint * getIntArrayFromJava(JNIEnv *env, jintArray j_frameStr){
    jint *c_frameStr;
    jint arr_len;
    arr_len = (*env).GetArrayLength(j_frameStr);
    c_frameStr = (jint*)malloc(sizeof(jint) * arr_len);
    // 初始化
    memset(c_frameStr,0, sizeof(jint)*arr_len);       // 此处留意
    // 获取数组
    c_frameStr = (*env).GetIntArrayElements(j_frameStr,NULL);
    return c_frameStr;
}

/*
 * Class:     mhwang_com_jni_Demo
 * Method:    sum
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_mhwang_com_jni_Demo_sum
        (JNIEnv *env, jobject, jint a, jint b){
    Demo demo = Demo();
    jint result = demo.sum(a, b);
    return result;
}

/*
 * Class:     mhwang_com_jni_Demo
 * Method:    twoSum
 * Signature: ([II)[I
 */
JNIEXPORT jintArray JNICALL Java_mhwang_com_jni_Demo_twoSum
        (JNIEnv *env, jobject, jintArray nums, jint target){
    Demo demo = Demo();
    // 由于java的数组不能直接传递给C++，因此需要转换为指针传递
    jint *result = demo.twoSum(getIntArrayFromJava(env, nums), target);
    if (result == nullptr){
        return nullptr;
    }
    // C++返回的数组为指针形式，也不能直接返回给java，所以通过Jni复制一个jintArray数组返回给java
    jintArray array = (*env).NewIntArray(2);
    (*env).SetIntArrayRegion(array, 0, 2, result);
    return array;
}

#ifdef __cplusplus
}
#endif
#endif